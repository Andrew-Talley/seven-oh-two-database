scalar Date

type Tournament {
  id: Int!
  name: String!
  start: Date
  end: Date
  host: String

  teams: [TournamentTeamData!]!
  case: Case!
  averageTPR: Float
}

type TournamentTeamData {
  tournament: Tournament!
  team: Team!

  wins: Int!
  ties: Int!
  losses: Int!

  totalPD: Int!
  totalCS: Int!
  totalOCS: Int!

  matchups: [Matchup!]!
}

type Matchup {
  pl: Team!
  def: Team!

  pds: [Int!]!
}

type Team {
  year: Int!
  name: String!
  num: Int!
}

type Case {
  id: Int!
}

type Query {
  allTournaments: [Tournament!]!
  tournament(tournamentId: Int): Tournament
}